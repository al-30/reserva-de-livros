// <auto-generated />
using System;
using EmprestimoLivro.API.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmprestimoLivro.API.Migrations
{
    [DbContext(typeof(ControleEmprestimoLivroContext))]
    [Migration("20250707194806_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("Latin1_General_CI_AS")
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EmprestimoLivro.API.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(14)
                        .IsUnicode(false)
                        .HasColumnType("varchar(14)");

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("EmprestimoLivro.API.Models.Livro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("LivroAnoPublicacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("LivroAutor")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("LivroEdicao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LivroEditora")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("LivroName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Livro");
                });

            modelBuilder.Entity("EmprestimoLivro.API.Models.LivroClienteEmprestimo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("LceDataEmprestimo")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("LceDataEntrega")
                        .HasColumnType("datetime");

                    b.Property<bool>("LceEntregue")
                        .HasColumnType("bit");

                    b.Property<int>("LceIdCliente")
                        .HasColumnType("int");

                    b.Property<int>("LceIdLivro")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LceIdCliente");

                    b.HasIndex("LceIdLivro");

                    b.ToTable("LivroClienteEmprestimos");
                });

            modelBuilder.Entity("EmprestimoLivro.API.Models.LivroClienteEmprestimo", b =>
                {
                    b.HasOne("EmprestimoLivro.API.Models.Cliente", "LceIdClienteNavigation")
                        .WithMany("LivroClienteEmprestimo")
                        .HasForeignKey("LceIdCliente")
                        .IsRequired()
                        .HasConstraintName("FK_LIVRO_EMPRESTIMO_CLIENTE");

                    b.HasOne("EmprestimoLivro.API.Models.Livro", "LceIdLivroNavigation")
                        .WithMany("LivroClienteEmprestimo")
                        .HasForeignKey("LceIdLivro")
                        .IsRequired()
                        .HasConstraintName("GK_LIVRO_CLIENTE_EMPRESTIMO_LIVRO");

                    b.Navigation("LceIdClienteNavigation");

                    b.Navigation("LceIdLivroNavigation");
                });

            modelBuilder.Entity("EmprestimoLivro.API.Models.Cliente", b =>
                {
                    b.Navigation("LivroClienteEmprestimo");
                });

            modelBuilder.Entity("EmprestimoLivro.API.Models.Livro", b =>
                {
                    b.Navigation("LivroClienteEmprestimo");
                });
#pragma warning restore 612, 618
        }
    }
}
